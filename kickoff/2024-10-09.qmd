---
title: "Kickoff "
author: "Peter Ganong and Maggie Shi"
date: October 9-10, 2024
date-format: long
format: 
    beamer:
        aspectratio: 169
        theme: default
        header-includes: \renewcommand{\tightlist}{\setlength{\itemsep}{3ex}\setlength{\parskip}{0pt}}
            \setbeamertemplate{footline}[frame number]
            \usepackage{fvextra}
            \DefineVerbatimEnvironment{Highlighting}{Verbatim}{breaklines,commandchars=\\\{\}}
            \DefineVerbatimEnvironment{OutputCode}{Verbatim}{breaklines,commandchars=\\\{\}}
---

## MUD cards

* questions about getting lecture notes before class and/or solutions in `after_lecture` -- all of this is posted. if you aren't sure how to get them, ask a peer.
    
* questions about git -- at the moment, continue to muddle through. Will have a lecture and a problem set on this later in the course.

* PG remark on professionalism: be on time. it is particularly awkward to get mud cards saying that something is unclear from someone who was late and missed the part of class where some material is covered. 

* Relatedly: lab quizzes will now close after the first 10 minutes of lab. 

## "Why are we switching to VSCode?"

Joaquin (TA): "It's much much better"

Some strengths we have noticed

* Software of choice for developing in many languages (not just Python)
* Supports `qmd`
* Elegant integration with `git` and virtual environments (coming soon)
* Github Copilot (discouraged for this course, but super useful down the road)

## Knitting to pdf I

We finally have a solution for this! (also MUD) Can see Peter's issue ticket *[here](https://github.com/vega/vl-convert/issues/183)*

**1. terminal**
```{}
pip install vl-convert-python --upgrade
```

**2. python kernel**
```{python}
#| eval: false
#| echo: true
import altair as alt
alt.renderers.enable("png")
```

**3. qmd header**
```{}
---
title: "My Pset"
format: pdf
---
```

## Knitting to pdf II

Five instructors tested this solution on a variety of machines (thank you!!!). 

* You also need to have a `tex` compiler installed to write to PDF. Most people already do, but some might not. Post in Ed if you are finding issues related to this
\vspace{2ex}
    * Shoutout: Ralph Valiere posted a useful tip on Ed for PC users!
* Only run `alt.renderers.enable("png")` if you want to make `.pdf`. If you want to make `.html`, no need to include this (and it might lead to errors)
* One also found that they needed to run `pip install ipykernel`

As usual, we don't know what will work on your computer, so please report bugs and issues!

## Announcements on homepage

* minilesson recordings on homepage. Will continue to record but will not send separate announcements
* Upcoming career panels on Nov 8 and Nov 15. RSVP link on homepage.

## PS1 Debrief 

*  Not many "coding errors" or technical issues. The main issue was students not reading the questions. 
\vspace{2ex}
    * did not use assert
    * did not calculate in megabytes
    * did not predict what is the size of the entire file.
* Many students wrote the correct code but did not make sure that the output answering the question was in the knitted document

## Debrief question 1.3

*The rows on the dataset are ordered or sorted by a certain column by default. Which column? Then, subset the dataset to the first 500 rows and write a function that tests if the column is ordered.*

- Most students only checked the index column ("Unnamed: 0"), but didn't check other column like "issue_date", which is actually ordered
\vspace{2ex}
    - This is because no `head()` or `print()` function used to visually inspect the columns


## Debrief questions 3.4

*3.4: Make a plot for the number of tickets issued by month and day by adapting the [Annual Weather Heatmap](https://altair-viz.github.io/gallery/annual_weather_heatmap.html) example online. What visual encoding channel or channels does this use?*

* Make sure that your plot prints and is not cut off
* Written answers belong outside Python code chunks (just like in the slides for the course).

**Example**

This is outside the code chunk
```{python}
#| eval: false
#| echo: true
alt.Chart(...)
```

## Debrief questions 3.7

*3.7: Suppose the lesson you want a read to take away is that the enforcement of violations is not evenly distributed over time? Which plot is best and why?*

- Some students printed long responses as strings/comments, making it hard to view the text
- Double-check your work after you compile
